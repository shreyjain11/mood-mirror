import React, { useRef } from 'react';
import { motion } from 'framer-motion';
import { Share2, Download } from 'lucide-react';
import html2canvas from 'html2canvas';
import { EmotionAnalysis } from '../types';
import { getEmotionColor } from '../utils/emotions';

interface ShareButtonProps {
  analysis: EmotionAnalysis;
  text: string;
}

export const ShareButton: React.FC<ShareButtonProps> = ({ analysis, text }) => {
  const cardRef = useRef<HTMLDivElement>(null);

  const generateMoodCard = async () => {
    if (!cardRef.current) return;

    try {
      const canvas = await html2canvas(cardRef.current, {
        backgroundColor: '#ffffff',
        scale: 2,
        width: 600,
        height: 400,
      });

      const link = document.createElement('a');
      link.download = `mood-analysis-${new Date().toISOString().split('T')[0]}.png`;
      link.href = canvas.toDataURL();
      link.click();
    } catch (err) {
      console.error('Failed to generate mood card:', err);
    }
  };

  return (
    <>
      <motion.button
        onClick={generateMoodCard}
        className="flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-lg hover:from-purple-700 hover:to-pink-700 transition-all duration-200"
        whileHover={{ scale: 1.02 }}
        whileTap={{ scale: 0.98 }}
      >
        <Share2 className="w-4 h-4" />
        <span className="text-sm font-medium">Share My Mood</span>
      </motion.button>

      {/* Hidden mood card for screenshot */}
      <div className="fixed -top-[9999px] left-0">
        <div
          ref={cardRef}
          className="w-[600px] h-[400px] bg-white p-8 rounded-2xl shadow-2xl"
        >
          <div className="text-center mb-6">
            <h2 className="text-2xl font-bold text-gray-800 mb-2">My Mood Analysis</h2>
            <div className={`inline-flex items-center px-4 py-2 rounded-full text-sm font-medium ${getEmotionColor(analysis.overallTone)}`}>
              {analysis.overallTone}
            </div>
          </div>

          <div className="mb-6">
            <h3 className="text-lg font-semibold mb-3 text-gray-800">Primary Emotions</h3>
            <div className="space-y-2">
              {analysis.primaryEmotions.map((emotion, index) => (
                <div key={index} className="flex items-center justify-between">
                  <span className="text-gray-700">{emotion.emotion}</span>
                  <div className="flex items-center space-x-2">
                    <div className="w-24 h-2 bg-gray-200 rounded-full overflow-hidden">
                      <div
                        className="h-full bg-purple-500 rounded-full"
                        style={{ width: `${emotion.percentage}%` }}
                      />
                    </div>
                    <span className="text-sm text-gray-600">{emotion.percentage}%</span>
                  </div>
                </div>
              ))}
            </div>
          </div>

          <div className="text-center">
            <p className="text-gray-600 text-sm italic">"{analysis.suggestion}"</p>
            <div className="mt-4 text-xs text-gray-400">
              Generated by MoodMirror â€¢ {new Date().toLocaleDateString()}
            </div>
          </div>
        </div>
      </div>
    </>
  );
};